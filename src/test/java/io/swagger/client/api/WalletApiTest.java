/**
 * LoopBack Application
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.io.File;
import io.swagger.client.model.Card;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WalletApi
 */
public class WalletApiTest {

    private final WalletApi api = new WalletApi();

    
    /**
     * Delete a specific business network card from the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardDeleteCardByNameTest() throws ApiException {
        String name = null;
        // api.cardDeleteCardByName(name);

        // TODO: test validations
    }
    
    /**
     * Test the existance of a specific business network card in the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardExistsCardByNameTest() throws ApiException {
        String name = null;
        // api.cardExistsCardByName(name);

        // TODO: test validations
    }
    
    /**
     * Export a business network card from the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardExportCardTest() throws ApiException {
        String name = null;
        // File response = api.cardExportCard(name);

        // TODO: test validations
    }
    
    /**
     * Get all of the business network cards in the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardGetAllCardsTest() throws ApiException {
        // List<Card> response = api.cardGetAllCards();

        // TODO: test validations
    }
    
    /**
     * Get a specific business network card from the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardGetCardByNameTest() throws ApiException {
        String name = null;
        // Card response = api.cardGetCardByName(name);

        // TODO: test validations
    }
    
    /**
     * Import a business network card into the wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardImportCardTest() throws ApiException {
        File card = null;
        String name = null;
        // api.cardImportCard(card, name);

        // TODO: test validations
    }
    
    /**
     * Set a specific business network card as the default business network card
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardSetDefaultTest() throws ApiException {
        String name = null;
        // api.cardSetDefault(name);

        // TODO: test validations
    }
    
}
